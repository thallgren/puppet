require 'puppet/pops'
require 'puppet/pspec'

module PuppetSpec::PSpec
  # Initialize a new scope suitable for testing.
  #
  def self.run_pspec(rspec_context, pspec_file)
    # A scope is necessary in order to evaluate. A compiler is necessary to have a scope. A node
    # with an environment is needed by the compiler.
    compiler = Puppet::Parser::Compiler.new(
      Puppet::Node.new('pspec_test', :environment => Puppet::Node::Environment.create(:testing, [])))

    # The Compiler#with_context_overrides method ensures that scope and loaders are properly
    # initialized when the evaluating the pspec
    examples = compiler.with_context_overrides('pspec evaluation') do
      scope = compiler.topscope
      Puppet::PSpec.init(scope)
      Puppet::PSpec.load_examples(scope, pspec_file)
    end

    # rspec_context is passed as the test_framework to the tests generated by pspec. This vouches for
    # correct rspec output where Examples becomes "context" and Example becomes "it".
    test_framework = Puppet::PSpec::TestFramework.create(rspec_context)

    examples.each do |pspec_test|
      Puppet::PSpec::Context.run_test(pspec_test, nil, test_framework)
    end
  end
end